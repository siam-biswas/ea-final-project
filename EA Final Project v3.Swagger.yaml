swagger: '2.0'
info:
  version: '1.0'
  title: EA Final Project
  contact: {}
host: localhost:8089
basePath: /
securityDefinitions: {}
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /authentication/accesstoken:
    post:
      summary: Retrive Access Token
      tags:
      - User Service
      operationId: RetriveAccessToken
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - name: Content-Type
        in: header
        required: false
        enum:
        - application/x-www-form-urlencoded
        type: string
        description: ''
      - name: X-CSRF-TOKEN
        in: header
        required: true
        type: integer
        format: int32
        description: ''
      responses:
        '200':
          description: ''
          headers: {}
  /users/register:
    post:
      summary: Register User
      tags:
      - User Service
      operationId: RegisterUser
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/RegisterUserRequest'
      responses:
        '200':
          description: ''
          headers: {}
  /users/login:
    post:
      summary: Login User
      tags:
      - User Service
      operationId: LoginUser
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/LoginUserRequest'
      responses:
        '200':
          description: ''
          headers: {}
  /users:
    get:
      summary: Get Users
      tags:
      - User Service
      operationId: GetUsers
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
    put:
      summary: Update User
      tags:
      - User Service
      operationId: UpdateUser
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/UpdateUserRequest'
      responses:
        '200':
          description: ''
          headers: {}
  /users/1:
    get:
      summary: Get User
      tags:
      - User Service
      operationId: GetUser
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
    delete:
      summary: Delete User
      tags:
      - User Service
      operationId: DeleteUser
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
  /users/favorites:
    get:
      summary: Get Favorites
      tags:
      - User Service
      operationId: GetFavorites
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
    post:
      summary: Add Favorite
      tags:
      - User Service
      operationId: AddFavorite
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AddFavoriteRequest'
      responses:
        '200':
          description: ''
          headers: {}
    put:
      summary: Update Favorite
      tags:
      - User Service
      operationId: UpdateFavorite
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/UpdateFavoriteRequest'
      responses:
        '200':
          description: ''
          headers: {}
  /users/favorites/1:
    delete:
      summary: Delete Favorite
      tags:
      - User Service
      operationId: DeleteFavorite
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
  /ratings:
    get:
      summary: Get Ratings
      tags:
      - Rating Service
      operationId: GetRatings
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
    post:
      summary: Add Rating
      tags:
      - Rating Service
      operationId: AddRating
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AddRatingRequest'
      responses:
        '200':
          description: ''
          headers: {}
    put:
      summary: Update Rating
      tags:
      - Rating Service
      operationId: UpdateRating
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/UpdateRatingRequest'
      responses:
        '200':
          description: ''
          headers: {}
  /ratings/1:
    get:
      summary: Get Rating
      tags:
      - Rating Service
      operationId: GetRating
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
  /ratings/4:
    delete:
      summary: Delete Rating
      tags:
      - Rating Service
      operationId: DeleteRating
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
  /comments:
    get:
      summary: Get Comments
      tags:
      - Comment Service
      operationId: GetComments
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
  /comments/2:
    get:
      summary: Get Comment
      tags:
      - Comment Service
      operationId: GetComment
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
  /comments/update:
    put:
      summary: Update Comment
      tags:
      - Comment Service
      operationId: UpdateComment
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/UpdateCommentRequest'
      responses:
        '200':
          description: ''
          headers: {}
  /comments/delete/1:
    delete:
      summary: Delete Comment
      tags:
      - Comment Service
      operationId: DeleteComment
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
  /comments/add:
    post:
      summary: Add Comment
      tags:
      - Comment Service
      operationId: AddComment
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AddCommentRequest'
      responses:
        '200':
          description: ''
          headers: {}
  /movies/getallmovies:
    get:
      summary: Get Movies
      tags:
      - Movie Service
      operationId: GetMovies
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
  /movies/getbyid:
    get:
      summary: Get Movie
      tags:
      - Movie Service
      operationId: GetMovie
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: movieId
        in: query
        required: true
        type: integer
        format: int32
        description: ''
      responses:
        '200':
          description: ''
          headers: {}
  /movies/filter:
    get:
      summary: Filter Movies
      tags:
      - Movie Service
      operationId: FilterMovies
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: filterType
        in: query
        required: true
        type: string
        description: ''
      - name: value
        in: query
        required: true
        type: string
        description: ''
      responses:
        '200':
          description: ''
          headers: {}
  /movies:
    put:
      summary: Update Movie
      tags:
      - Movie Service
      operationId: UpdateMovie
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/UpdateMovieRequest'
      responses:
        '200':
          description: ''
          headers: {}
    delete:
      summary: Delete Movie
      tags:
      - Movie Service
      operationId: DeleteMovie
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: movieId
        in: query
        required: true
        type: integer
        format: int32
        description: ''
      responses:
        '200':
          description: ''
          headers: {}
    post:
      summary: Add Movie
      tags:
      - Movie Service
      operationId: AddMovie
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AddMovieRequest'
      responses:
        '200':
          description: ''
          headers: {}
  /tvseries/finallseries:
    get:
      summary: Get Serieses
      tags:
      - Series Service
      operationId: GetSerieses
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
  /tvseries/1:
    get:
      summary: Get Series
      tags:
      - Series Service
      operationId: GetSeries
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
    delete:
      summary: Delete Series
      tags:
      - Series Service
      operationId: DeleteSeries
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
  /tvseries/filter:
    get:
      summary: Filter Seriess
      tags:
      - Series Service
      operationId: FilterSeriess
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: filterType
        in: query
        required: true
        type: string
        description: ''
      - name: value
        in: query
        required: true
        type: string
        description: ''
      responses:
        '200':
          description: ''
          headers: {}
  /tvseries:
    put:
      summary: Update Series
      tags:
      - Series Service
      operationId: UpdateSeries
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/UpdateSeriesRequest'
      responses:
        '200':
          description: ''
          headers: {}
    post:
      summary: Add Series
      tags:
      - Series Service
      operationId: AddSeries
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description: ''
        schema:
          $ref: '#/definitions/AddSeriesRequest'
      responses:
        '200':
          description: ''
          headers: {}
definitions:
  RegisterUserRequest:
    title: RegisterUserRequest
    example:
      userName: nsRahman
      firstName: NS
      lastName: Rahman
      email: nsr@miu.edu
      phone: '641233000'
      password: '123456'
    type: object
    properties:
      userName:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      phone:
        type: string
      password:
        type: string
    required:
    - userName
    - firstName
    - lastName
    - email
    - phone
    - password
  LoginUserRequest:
    title: LoginUserRequest
    example:
      userName: nsRahman
      password: '123456'
    type: object
    properties:
      userName:
        type: string
      password:
        type: string
    required:
    - userName
    - password
  UpdateUserRequest:
    title: UpdateUserRequest
    example:
      id: 2
      userName: nsRahman
      firstName: NS
      lastName: Rahman
      email: nsr@miu.edu
      phone: '641233001'
      password: '123456'
    type: object
    properties:
      id:
        type: integer
        format: int32
      userName:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      phone:
        type: string
      password:
        type: string
    required:
    - id
    - userName
    - firstName
    - lastName
    - email
    - phone
    - password
  AddFavoriteRequest:
    title: AddFavoriteRequest
    example:
      content:
        contentId: 1
        contentType: movie
      user_id: 1
    type: object
    properties:
      content:
        $ref: '#/definitions/Content'
      user_id:
        type: integer
        format: int32
    required:
    - content
    - user_id
  Content:
    title: Content
    example:
      contentId: 1
      contentType: movie
    type: object
    properties:
      contentId:
        type: integer
        format: int32
      contentType:
        type: string
    required:
    - contentId
    - contentType
  UpdateFavoriteRequest:
    title: UpdateFavoriteRequest
    example:
      id: 1
      content:
        contentId: 1
        contentType: movie
      user_id: 1
    type: object
    properties:
      id:
        type: integer
        format: int32
      content:
        $ref: '#/definitions/Content'
      user_id:
        type: integer
        format: int32
    required:
    - id
    - content
    - user_id
  AddRatingRequest:
    title: AddRatingRequest
    example:
      userId: 1
      content:
        contentId: 2
        contentType: 1
      value: 4
    type: object
    properties:
      userId:
        type: integer
        format: int32
      content:
        $ref: '#/definitions/Content2'
      value:
        type: integer
        format: int32
    required:
    - userId
    - content
    - value
  Content2:
    title: Content2
    example:
      contentId: 2
      contentType: 1
    type: object
    properties:
      contentId:
        type: integer
        format: int32
      contentType:
        type: integer
        format: int32
    required:
    - contentId
    - contentType
  UpdateRatingRequest:
    title: UpdateRatingRequest
    example:
      id: 2
      userId: 1
      content:
        contentId: 2
        contentType: 1
      value: 3
    type: object
    properties:
      id:
        type: integer
        format: int32
      userId:
        type: integer
        format: int32
      content:
        $ref: '#/definitions/Content2'
      value:
        type: integer
        format: int32
    required:
    - id
    - userId
    - content
    - value
  UpdateCommentRequest:
    title: UpdateCommentRequest
    example:
      id: 1
      comment: movie 2 is bad
      userId: 1
      content:
        contentId: 1
        contentType: series
    type: object
    properties:
      id:
        type: integer
        format: int32
      comment:
        type: string
      userId:
        type: integer
        format: int32
      content:
        $ref: '#/definitions/Content'
    required:
    - id
    - comment
    - userId
    - content
  AddCommentRequest:
    title: AddCommentRequest
    example:
      comment: movie 2 is bad
      userId: 1
      content:
        contentId: 1
        contentType: series
    type: object
    properties:
      comment:
        type: string
      userId:
        type: integer
        format: int32
      content:
        $ref: '#/definitions/Content'
    required:
    - comment
    - userId
    - content
  UpdateMovieRequest:
    title: UpdateMovieRequest
    example:
      id: 1
      durationInMinutes: 162
      genre: Drama
      director: Frank Darabont
      releaseDate: 1994-09-10
      title: The Shawshank Redemption
    type: object
    properties:
      id:
        type: integer
        format: int32
      durationInMinutes:
        type: integer
        format: int32
      genre:
        type: string
      director:
        type: string
      releaseDate:
        type: string
      title:
        type: string
    required:
    - id
    - durationInMinutes
    - genre
    - director
    - releaseDate
    - title
  AddMovieRequest:
    title: AddMovieRequest
    example:
      durationInMinutes: 162
      genre: Drama
      director: Frank Darabont
      releaseDate: 1994-09-10
      title: The Shawshank Redemption
    type: object
    properties:
      durationInMinutes:
        type: integer
        format: int32
      genre:
        type: string
      director:
        type: string
      releaseDate:
        type: string
      title:
        type: string
    required:
    - durationInMinutes
    - genre
    - director
    - releaseDate
    - title
  UpdateSeriesRequest:
    title: UpdateSeriesRequest
    example:
      id: 1
      durationInMinutes: 162
      genre: Drama
      director: Frank Darabont
      releaseDate: 1994-09-10
      title: The Shawshank Redemption
    type: object
    properties:
      id:
        type: integer
        format: int32
      durationInMinutes:
        type: integer
        format: int32
      genre:
        type: string
      director:
        type: string
      releaseDate:
        type: string
      title:
        type: string
    required:
    - id
    - durationInMinutes
    - genre
    - director
    - releaseDate
    - title
  AddSeriesRequest:
    title: AddSeriesRequest
    example:
      title: Annie Hall
      numberOfSeasons: 2
      numberOfEpisodes: 15
      durationInMinutes: 150
      genre: Action
      director: Woody Allen
      releaseDate: 2002-12-23
    type: object
    properties:
      title:
        type: string
      numberOfSeasons:
        type: integer
        format: int32
      numberOfEpisodes:
        type: integer
        format: int32
      durationInMinutes:
        type: integer
        format: int32
      genre:
        type: string
      director:
        type: string
      releaseDate:
        type: string
    required:
    - title
    - numberOfSeasons
    - numberOfEpisodes
    - durationInMinutes
    - genre
    - director
    - releaseDate
tags:
- name: User Service
- name: Rating Service
- name: Comment Service
- name: Movie Service
- name: Series Service
